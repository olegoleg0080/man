{"mappings":"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","sources":["src/js/refs.js","src/js/create-card.js","src/js/modal.js","src/js/parselURLFix.js","src/js/getDataClassRender.js","src/js/getGroupRender.js","src/js/index.js"],"sourcesContent":["const refs = {\n  sortSelect: document.querySelector('.sort-select__text'),\n  scroll: document.querySelector('.container-scroll'),\n  modalOpen: document.querySelector('.burger'),\n  burgerModal: document.querySelector('.burger-modal'),\n  modalClose: document.querySelector('.modal__close'),\n  loginModal: document.querySelector('.login'),\n  accountBtn: document.querySelector('.support__btn-account'),\n  containerScroll: document.querySelector('.container-scroll'),\n  redactContainer: document.querySelector('.redact__container'),\n  redactClose: document.querySelector('.redact__close'),\n  modalGroup: document.querySelector('.modal-block-group'),\n  modalVac: document.querySelector('.modal-block-vac'),\n  modalBtnGroup: document.querySelector('.sort__group'),\n  modalBtnVac: document.querySelector('.sort__vaccination'),\n  redactBlock: document.querySelector('.redact__blocks'),\n  classListPrim: document.querySelector('#class-list-primary'),\n  classListSec: document.querySelector('#class-list-sec'),\n  classListHi: document.querySelector('#class-list-hi'),\n  className: document.querySelector('.class-parallel__name'),\n  cardClassName: document.querySelector('.card__className-class'),\n};\n\nexport default refs;\n\n","import refs from \"./refs\";\nconst BASE_URL = 'https://65bce5d2b51f9b29e9328629.mockapi.io/man/man';\nfetch(`${BASE_URL}classes`)\n  .then(response => {\n    return response.json();\n  })\n  .then(data => {\n    const dataList = data[0].man[0].classes;\n    let a = 0;\n    dataList.forEach(e => {\n      if (Number(e.paralelName) !== a) {\n        classQuantity += 1;\n        a = e.paralelName;\n      } else return;\n    });\n    classParalelsQuantity = a;\n    createClassParalel(1, 4, refs.classListPrim);\n    createClassParalel(5, 9, refs.classListSec);\n    createClassParalel(10, 12, refs.classListHi);\n    dataList.forEach(e => {\n      createCardClassName(e);\n    });\n  })\n  .catch(error => {\n    console.error('Error:', error);\n    console.clear()\n  });\nlet classQuantity = 0;\nlet classParalelsQuantity = 1;\nfunction createCardClassName(dateClass) {\n  const element = document.querySelector(\n    `#class-paralel-${dateClass.paralelName}`\n  );\n  const card = `<a class=\"class-parallel__name\" href=\"./class.html?parName=${dateClass.paralelName}&classLetter=${dateClass.classLetter}\">${dateClass.paralelName}-${dateClass.classLetter}</a>`;\n  element.insertAdjacentHTML('beforeend', card);\n}\nfunction createClassParalel(a, n, paralelBlock) {\n  if(a!= null && n !== null && paralelBlock !== null){for (a; a <= n; a++) {\n    const card = `<div id=\"class-paralel-${a}\" class=\"class-list__parallel class-parallel\"></div>`;\n    paralelBlock.insertAdjacentHTML('beforeend', card);\n  }}\n}\n","import refs from './refs';\nfunction modalOpen(btnName, modalBlock) {\n  btnName.addEventListener('click', () => {\n    modalBlock.classList.remove('hidden');\n    document.body.style = 'overflow: hidden';\n  });\n}\nfunction modalClose(btnName, modalBlock) {\n  if (btnName) {\n    btnName.addEventListener('click', () => {\n      modalBlock.classList.add('hidden');\n      document.body.style = 'overflow-y: scroll';\n    });\n  }\n}\nfunction modalCloseOut(btnName, className, modalBlock) {\n  //? btnName при нажатті на що буде закриватися модалка\n  //? className буде перевірятися чи не нажато на className\n  //? modalBlock те що буде ховатися\n  if (btnName && modalBlock) {\n    btnName.addEventListener('click', e => {\n      if (!e.target.closest(className)) {\n        modalBlock.classList.add('hidden');\n        document.body.style = 'overflow: scroll';\n      }\n    });\n  }\n}\nfunction modalRadio2(btnName1, btnName2, modalBlock1, modalBlock2) {\n  if (btnName1 && btnName2 && modalBlock1 && modalBlock2) {\n    btnName1.addEventListener('click', () => {\n      if (modalBlock1.classList.contains('hidden')) {\n        modalBlock1.classList.remove('hidden');\n        modalBlock2.classList.add('hidden');\n      } else {\n        modalBlock1.classList.add('hidden');\n      }\n    });\n    btnName2.addEventListener('click', () => {\n      if (modalBlock2.classList.contains('hidden')) {\n        modalBlock2.classList.remove('hidden');\n        modalBlock1.classList.add('hidden');\n      } else {\n        modalBlock2.classList.add('hidden');\n      }\n    });\n    //? при натисканні одної модалки інша ховається}\n  }\n}\n//! функції які використовуються лише 1 раз\nfunction openRedact(containerScroll, redactContainer) {\n  if (containerScroll && redactContainer) {\n    containerScroll.addEventListener('click', e => {\n      const clickedTr = e.target.closest('tr');\n\n      if (clickedTr && clickedTr.id !== 'noRedact') {\n        redactContainer.classList.remove('hidden');\n        document.body.style = 'overflow: hidden';\n        console.log('hello');\n      }\n    });\n  }\n}\n\nexport default {\n  modalOpen,\n  modalClose,\n  modalCloseOut,\n  modalRadio2,\n  openRedact,\n};\n","import refs from \"./refs\";\nexport default function createNormalURL(URL, updateURL, classElement, title, classBlock) {\nlet normalUrl = `<a href=\"${URL}?${updateURL}\" class=\"${classElement}\">${title}</a>`;\nlet element = document.querySelector(classBlock);\nelement.insertAdjacentHTML(\"beforeend\", normalUrl);\n}","import refs from './refs';\ndocument.addEventListener('DOMContentLoaded', function () {\n  const BASE_URL = 'https://65bce5d2b51f9b29e9328629.mockapi.io/man/man';\n  const urlParams = new URLSearchParams(window.location.search);\n  const parName = urlParams.get('parName');\n  const classLetter = urlParams.get('classLetter');\n  let num = 1;\n  console.log(parName);\n  console.log(classLetter);\n  \n  fetch(`${BASE_URL}classes`)\n    .then(response => {\n      return response.json();\n    })\n    .then(data => {\n      const dataList = data[0].man[0].classes;\n      dataList.forEach(e => {\n        if (parName == e.paralelName && classLetter == e.classLetter) {\n          refs.cardClassName.innerHTML = `${parName}-${classLetter}`;\n          e.students.forEach(e => {\n            let dataName = e.name;\n            let dataBirthday = e.birthday;\n            let dataGroup = e.group;\n            let dataTerm = e.term;\n            let dataVactination = e.vaccination;\n            switch (dataGroup) {\n              case 1:\n                dataGroup = 'Основна';\n                break;\n              case 2:\n                dataGroup = 'Підготовча';\n                break;\n              case 3:\n                dataGroup = 'Спеціальна';\n                break;\n              case 4:\n                dataGroup = 'Звільнені';\n                break;\n              default:\n                break;\n            }\n            switch (dataVactination) {\n              case true:\n                dataVactination = 'Щеплений';\n                break;\n              case false:\n                dataVactination = 'Не щеплений';\n                break;\n\n              default:\n                break;\n            }\n            const card = `              \n          <tr class=\"card__table-item\">\n          <td id=\"table-data-id\" class=\"card__table-data-class\">${num}</td>\n          <td id=\"table-data-name\" class=\"card__table-data-class\">${dataName}</td>\n          <td id=\"table-data-birthday\" class=\"card__table-data-class\">${dataBirthday}</td>\n          <td id=\"table-data-group\" class=\"card__table-data-class\">${dataGroup}</td>\n          <td id=\"table-data-date\" class=\"card__table-data-class\">${dataTerm}</td>\n          <td id=\"table-data-vactination\" class=\"card__table-data-class\">${dataVactination}</td>\n            </tr>`;\n            num += 1\n            const element = document.querySelector(\n              '.card__table-class > tbody'\n            );\n            element.insertAdjacentHTML('beforeend', card);\n          });\n        }\n      });\n    })\n\n    .catch(error => {\n      console.error('Error:', error);\n    });\n});\n","import refs from './refs';\ndocument.addEventListener('DOMContentLoaded', function () {\n  const BASE_URL = 'https://65bce5d2b51f9b29e9328629.mockapi.io/man/man';\n  const urlParams = new URLSearchParams(window.location.search);\n  const group = urlParams.get('group');\n  const vac = urlParams.get('vactination');\n  let className;\n  let cardParalel;\n  fetch(`${BASE_URL}`)\n    .then(response => {\n      return response.json();\n    })\n    .then(data => {\n      const dataList = data[0].man[0].classes;\n      let a = 1;\n      dataList.forEach(e => {\n        if (group !== null) {\n          let parName;\n          let classLett;\n          if (e.paralelName == a) {\n            // console.log(`${e.paralelName}-${e.classLetter}`);\n            switch (Number(e.paralelName)) {\n              case 1:\n                className = 'Перші класи';\n                break;\n              case 2:\n                className = 'Другі класи';\n                break;\n              case 3:\n                className = 'Треті класи';\n                break;\n              case 4:\n                className = 'Четверті класи';\n                break;\n              case 5:\n                className = \"П'яті класи\";\n                break;\n              case 6:\n                className = 'Шості класи';\n                break;\n              case 7:\n                className = 'Сьомі класи';\n                break;\n              case 8:\n                className = 'Восьмі класи';\n                break;\n              case 9:\n                className = \"Дев'яті класи\";\n                break;\n              case 10:\n                className = 'Десяті класи';\n                break;\n              case 11:\n                className = 'Одинадцяті класи';\n                break;\n              case 12:\n                className = 'Дванадцяті  класи';\n                break;\n\n              default:\n                break;\n            }\n            parName = e.paralelName;\n            classLett = e.classLetter;\n\n            createCardClassSort(parName, className, '.class-js-input');\n            a++;\n          }\n          getDataStudentsClass(0, e.paralelName, e.classLetter);\n        } else if (vac !== null) {\n          let parName;\n          let classLett;\n          if (e.paralelName == a) {\n            // console.log(`${e.paralelName}-${e.classLetter}`);\n            switch (Number(e.paralelName)) {\n              case 1:\n                className = 'Перші класи';\n                break;\n              case 2:\n                className = 'Другі класи';\n                break;\n              case 3:\n                className = 'Треті класи';\n                break;\n              case 4:\n                className = 'Четверті класи';\n                break;\n              case 5:\n                className = \"П'яті класи\";\n                break;\n              case 6:\n                className = 'Шості класи';\n                break;\n              case 7:\n                className = 'Сьомі класи';\n                break;\n              case 8:\n                className = 'Восьмі класи';\n                break;\n              case 9:\n                className = \"Дев'яті класи\";\n                break;\n              case 10:\n                className = 'Десяті класи';\n                break;\n              case 11:\n                className = 'Одинадцяті класи';\n                break;\n              case 12:\n                className = 'Дванадцяті  класи';\n                break;\n\n              default:\n                break;\n            }\n            parName = e.paralelName;\n            classLett = e.classLetter;\n            createCardClassSort(parName, className, '.class-js-input');\n            a++;\n          }\n          getDataStudentsClass(1, e.paralelName, e.classLetter);\n        }\n        function createCardClassSort(parName, className, element) {\n          cardParalel = `<div id=\"class-${parName}\" class=\"container-m\">\n          <h2 class=\"school__tier school__tier-title\">${className}</h2>\n          <div class=\"class-paralel\">\n          </div>\n        </div>`;\n          // console.log(cardParalel);\n          element = document.querySelector(`${element}`);\n          element.insertAdjacentHTML('beforeend', cardParalel);\n        }\n        function getDataStudentsClass(type, paralel, letter) {\n          if (e.paralelName == paralel) {\n            if (type == 0) {\n              const cardStudent = `\n            <div class=\"card\">\n              <div class=\"card__header card__header-group\">\n                  <h3 class=\"card__class\">${paralel}-${letter} клас</h3>\n                  <button class=\"card__download\">\n                      <p class=\"card__download-text\">Отримати дані</p>\n                      <svg class=\"card__download-icon\">\n                          <use href=\"./svg/download.svg#download\"></use>\n                      </svg>\n                  </button>\n              </div>\n              <table id=\"classCard${paralel}-${letter}\" class=\"card__table card__table-group\">\n                  <tbody>\n                      <tr id=\"noRedact\">\n                          <th class=\"card__table-title\">№</th>\n                          <th class=\"card__table-title\">ПІБ</th>\n                          <th class=\"card__table-title\">Група здоров'я</th>\n                          <th class=\"card__table-title\">Термін дії</th>\n                      </tr>\n                  </tbody>\n              </table>\n          </div>\n                `;\n              const element = document.querySelector(\n                `#class-${paralel} > .class-paralel`\n              );\n              // console.log(cardStudent);\n              element.insertAdjacentHTML('beforeend', cardStudent);\n              let c = 1;\n              dataStudentRender(type, paralel, letter, c);\n            }\n            if (type == 1) {\n              const cardStudent = `\n              <div class=\"card card-small\">\n              <div class=\"card__header\">\n                <h3 class=\"card__class\">${paralel}-${letter} клас</h3>\n                <button class=\"card__download\">\n                  <p class=\"card__download-text\">Отримати дані</p>\n                  <svg class=\"card__download-icon\">\n                    <use href=\"#\"></use>\n                  </svg>\n                </button>\n              </div>\n              <table id=\"classCard${paralel}-${letter}\" class=\"card__table\">\n                <tbody>\n                  <tr>\n                    <th class=\"card__table-title\">№</th>\n                    <th class=\"card__table-title\">ПІБ</th>\n                    <th class=\"card__table-title\">Щеплення</th>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n                `;\n              const element = document.querySelector(\n                `#class-${paralel} > .class-paralel`\n              );\n              // console.log(cardStudent);\n              element.insertAdjacentHTML('beforeend', cardStudent);\n              let c = 1;\n              dataStudentRender(type, paralel, letter, c);\n            }\n          }\n        }\n        function dataStudentRender(type, paralel, letter, num) {\n          if (e.paralelName == paralel && e.classLetter == letter) {\n            e.students.forEach(e => {\n              let dataName = e.name;\n              let dataGroup = e.group;\n              let dataTerm = e.term;\n              let dataVactination = e.vaccination;\n              switch (dataGroup) {\n                case 1:\n                  dataGroup = 'Основна';\n                  break;\n                case 2:\n                  dataGroup = 'Підготовча';\n                  break;\n                case 3:\n                  dataGroup = 'Спеціальна';\n                  break;\n                case 4:\n                  dataGroup = 'Звільнені';\n                  break;\n                default:\n                  break;\n              }\n              switch (dataVactination) {\n                case true:\n                  dataVactination = 'Щеплений';\n                  break;\n                case false:\n                  dataVactination = 'Не щеплений';\n                  break;\n\n                default:\n                  break;\n              }\n\n              let card;\n              if (type == 0) {\n                if (Number(group) == e.group) {\n                  card = `              \n                <tr class=\"card__table-item \">\n                      <td id=\"table-data-id\" class=\"card__table-data\">${num}</td>\n                      <td id=\"table-data-name\" class=\"card__table-data\">${dataName}</td>\n                      <td id=\"table-data-group\" class=\"card__table-data\">${dataGroup}</td>\n                      <td id=\"table-data-date\" class=\"card__table-data\">${dataTerm}</td>\n                  </tr>`;\n                } else return;\n              }\n              if (type == 1) {\n                if (Boolean(vac) === e.vaccination) {\n                  card = `\n                <tr class=\"card__table-item\">\n                    <td id=\"table-data-id\" class=\"card__table-data\">${num}</td>\n                    <td id=\"table-data-name\" class=\"card__table-data\">\n                      ${dataName}\n                    </td>\n                    <td id=\"table-data-group\" class=\"card__table-data card__table-data-svg\">${dataVactination}</td>\n                  </tr>\n                `;\n                } else return;\n              }\n              const element = document.querySelector(\n                `#classCard${paralel}-${letter} > tbody`\n              );\n              element.insertAdjacentHTML('beforeend', card);\n              num += 1;\n            });\n          }\n        }\n      });\n    })\n\n    .catch(error => {\n      console.error('Error:', error);\n    });\n});\n","import refs from \"./refs.js\";\nimport create from './create-card.js';\nimport apiModal from './modal.js';\nimport createNormalURL from \"./parselURLFix.js\";\nimport GetData from \"./getDataClassRender.js\";\nimport getGroup from \"./getGroupRender.js\";\n\n\n\n// ? виправлення парселя для модлки\ncreateNormalURL('./class-sort.html', 'group=1', 'modal__block-version', 'Основна', '.modal__group');\ncreateNormalURL('./class-sort.html', 'group=2', 'modal__block-version', 'Підготовча', '.modal__group');\ncreateNormalURL('./class-sort.html', 'group=3', 'modal__block-version', 'Спеціальна', '.modal__group');\ncreateNormalURL('./class-sort.html', 'group=4', 'modal__block-version', 'Звільнені', '.modal__group');\n\ncreateNormalURL('./class-sort.html', 'vactination=true', 'modal__block-version', 'Щеплений', '.modal__vactination');\ncreateNormalURL('./class-sort.html', 'vactination=false', 'modal__block-version', 'Не щеплений', '.modal__vactination');\n// ? виправлення парселя для основного хедеру\ncreateNormalURL('./class-sort.html', 'group=1', 'sort__modal-btn', 'Основна', '.modal-block-group');\ncreateNormalURL('./class-sort.html', 'group=2', 'sort__modal-btn', 'Підготовча', '.modal-block-group');\ncreateNormalURL('./class-sort.html', 'group=3', 'sort__modal-btn', 'Спеціальна', '.modal-block-group');\ncreateNormalURL('./class-sort.html', 'group=4', 'sort__modal-btn', 'Звільнені', '.modal-block-group');\n\ncreateNormalURL('./class-sort.html', 'vactination=true', 'sort__modal-btn', 'Щеплений', '.modal-block-vac');\ncreateNormalURL('./class-sort.html', 'vactination=false', 'sort__modal-btn', 'Не щеплений', '.modal-block-vac');\ndocument.addEventListener('DOMContentLoaded', () => {\n  apiModal.modalRadio2(\n    refs.modalBtnGroup,\n    refs.modalBtnVac,\n    refs.modalGroup,\n    refs.modalVac\n  );\n\n  apiModal.modalOpen(refs.modalOpen, refs.burgerModal);\n  apiModal.modalOpen(refs.accountBtn, refs.loginModal);\n  apiModal.modalClose(refs.modalClose, refs.burgerModal);\n  apiModal.modalClose(refs.redactClose, refs.redactContainer);\n  apiModal.modalCloseOut(refs.burgerModal,'.modal__container', refs.burgerModal);\n  // apiModal.modalCloseOut(document.body, '.header__sort-modal', refs.modalGroup);\n  // apiModal.modalCloseOut(document.body, '.header__sort-modal', refs.modalVac);\n  apiModal.modalCloseOut(refs.redactContainer,'.redact__blocks',refs.redactContainer);\n  apiModal.openRedact(refs.containerScroll, refs.redactContainer);\n\n});\n"],"names":["$37e33676934ad046$export$2e2bcd8739ae039","sortSelect","document","querySelector","scroll","modalOpen","burgerModal","modalClose","loginModal","accountBtn","containerScroll","redactContainer","redactClose","modalGroup","modalVac","modalBtnGroup","modalBtnVac","redactBlock","classListPrim","classListSec","classListHi","className","cardClassName","fetch","concat","then","response","json","data","dataList","man","classes","a","forEach","e","Number","paralelName","$cbc85f93c28825b2$var$createClassParalel","dateClass","element","card","classLetter","insertAdjacentHTML","catch","error","console","clear","n","paralelBlock","$40873ecf3c18e122$export$2e2bcd8739ae039","btnName","modalBlock","addEventListener","classList","remove","body","style","add","modalCloseOut","target","closest","modalRadio2","btnName1","btnName2","modalBlock1","modalBlock2","contains","openRedact","clickedTr","id","log","$045cf97e64716fcd$export$2e2bcd8739ae039","URL","updateURL","classElement","title","classBlock","normalUrl","urlParams","URLSearchParams","window","location","search","parName","get","num","e1","innerHTML","students","dataName","name","dataBirthday","birthday","dataGroup","group","dataTerm","term","dataVactination","vaccination","className1","cardParalel","vac","createCardClassSort","getDataStudentsClass","parName1","type","paralel","letter","cardStudent","dataStudentRender","cardStudent1","Boolean"],"version":3,"file":"index.7e49e4ac.js.map"}